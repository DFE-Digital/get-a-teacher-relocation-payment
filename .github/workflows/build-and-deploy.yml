name: Build and Deploy
concurrency: build_and_deploy_${{ github.ref_name }}

on:
  push:
   branches:
    - main
  pull_request:
    branches:
    - main
    types: [opened, reopened, synchronize, labeled]

env:
  TF_PATH: terraform/aks

jobs:
  build:
    name: Build
    env:
      DOCKER_IMAGE: ghcr.io/dfe-digital/international-teacher-relocation-payment
    outputs:
      docker-image-tag: ${{ steps.build-image.outputs.tag }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      name: Checkout

    - name: Build and push docker image
      id: build-image
      uses: DFE-Digital/github-actions/build-docker-image@2088-create-github-workflow-templates
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        context: .
        docker-repository: ${{ env.DOCKER_IMAGE }}
        max-cache: true
        reuse-cache: true
#        snyk-token: ${{ secrets.SNYK_TOKEN }}

  deploy-review-app:
    name: Deployment To Review
    concurrency: deploy_review_${{ github.event.pull_request.number }}
    if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'deploy') }}
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: write
    environment:
      name: review
      url: ${{ steps.deploy_review.outputs.environment_url }}

    steps:
    # - name: Checkout
    #   uses: actions/checkout@v4

    - name: Deploy App to Review
      id: deploy_review
      uses: DFE-Digital/github-actions/deploy-to-aks@2088-create-github-workflow-templates
      with:
        azure-credentials:  ${{ secrets.AZURE_CREDENTIALS_REVIEW }}
        environment: review
        # github-token: ${{ secrets.GITHUB_TOKEN }}
        pr-number: ${{ github.event.pull_request.number }}
        sha: ${{ needs.build.outputs.docker-image-tag }}
        terraform-base: ${{ env.TF_PATH }}
        healthcheck: 'healthcheck/all'
        # gcp-wip: ${{ vars.GCP_WIP }}
        # gcp-project-id: ${{ vars.GCP_PROJECT_ID }}
        # db-seed: true

  # deploy-before-production:
  #   name: Parallel deployment before production
  #   environment:
  #     name: ${{ matrix.environment }}
  #     url: ${{ steps.deploy_app_before_production.outputs.deploy-url }}
  #   if: ${{ success() && github.ref == 'refs/heads/main' }}
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       environment: [qa,staging]
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: Deploy app to ${{ matrix.environment }}
  #     id: deploy_app_before_production
  #     uses: ./.github/actions/deploy/
  #     with:
  #       azure-credentials: ${{ secrets[format('AZURE_CREDENTIALS_{0}', matrix.environment)] }}
  #       environment: ${{ matrix.environment }}
  #       sha: ${{ github.sha }}

  # deploy-production:
  #   name: Production deployment
  #   environment:
  #     name: production
  #     url: ${{ steps.deploy_production.outputs.deploy-url }}
  #   if: ${{ success() && github.ref == 'refs/heads/main' }}
  #   needs: [deploy-before-production]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: Deploy app to production
  #     id: deploy_production
  #     uses: ./.github/actions/deploy/
  #     with:
  #       azure-credentials: ${{ secrets.AZURE_CREDENTIALS_PRODUCTION }}
  #       environment: production
  #       sha: ${{ github.sha }}
